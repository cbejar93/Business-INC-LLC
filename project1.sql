CREATE TABLE EMPLOYEE
(
GOOGLE_ID INTEGER,
EMPLOYEE_ID INTEGER PRIMARY KEY,
FIRSTNAME VARCHAR2(30),
LASTNAME VARCHAR2(30),
EMAIL VARCHAR2(30)
)

CREATE TABLE MANAGERS 
(
MANAGER_ID INTEGER PRIMARY KEY,
TITLE VARCHAR2(30) NOT NULL,
EMPLOYEE_ID INTEGER 
)

CREATE TABLE MANAGERS_EMPLOYEE
(
MANAGER_ID INTEGER,
EMPLOYEE_ID INTEGER,
constraint MANAGERS_EMPLOYEE_pk primary key (MANAGER_ID,EMPLOYEE_ID)
)

CREATE TABLE REIMBURSEMENT 
(
R_ID INTEGER PRIMARY KEY,
R_DESCRIPTION VARCHAR2(30) NOT NULL,
AMOUNT INTEGER NOT NULL,
PICTURE_ID INTEGER,
EMPLOYEE_ID INTEGER,
Resolved VARCHAR2(30) DEFAULT 'NO' NOT NULL,
TIME_RES DATE,
WHO_RES VARCHAR2(30)
)

ALTER TABLE MANAGERS_EMPLOYEE ADD CONSTRAINT FK_ME_EMPLOYEE
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID);

ALTER TABLE MANAGERS_EMPLOYEE ADD CONSTRAINT FK_ME_EMPLOYEE2
FOREIGN KEY (MANAGER_ID) REFERENCES MANAGERS (MANAGER_ID);

ALTER TABLE MANAGERS ADD CONSTRAINT FK_MANAGEREMPLOYEE
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID);

ALTER TABLE REIMBURSEMENT ADD CONSTRAINT FK_REIMBUSMENTEMPLOYEE
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID);

CREATE SEQUENCE employee_seq START WITH 1;

CREATE SEQUENCE manager_seq START WITH 1;

CREATE SEQUENCE reim_seq START WITH 1;


CREATE OR REPLACE TRIGGER EMPLOYEE_ID_CREATOR 
BEFORE INSERT ON EMPLOYEE 
FOR EACH ROW

BEGIN
  SELECT employee_seq.NEXTVAL
  INTO   :new.employee_id
  FROM   dual;
END;



CREATE OR REPLACE TRIGGER MANAGER_ID_CREATOR 
BEFORE INSERT ON MANAGERS 
FOR EACH ROW

BEGIN
  SELECT manager_seq.NEXTVAL
  INTO   :new.manager_id
  FROM   dual;
END;


CREATE OR REPLACE TRIGGER REIMBURSMENT_ID_CREATOR 
BEFORE INSERT ON REIMBURSEMENT 
FOR EACH ROW

BEGIN
  SELECT reim_seq.NEXTVAL
  INTO   :new.r_id
  FROM   dual;
END;












